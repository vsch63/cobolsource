000010*Property of FIS©. or its affiliates
000020*all rights reserved. FIS Confidential
000030 IDENTIFICATION DIVISION.
000040 PROGRAM-ID.           CACREINB.
000050 AUTHOR.               DANIEL WILLIAMS
000060 DATE-WRITTEN.         1997-04-16.
000070****************************************************************
000080*   $Modtime::   10 Oct 2018 10:15:18  $
000090*   $Log::   P:/pvcsproj/DONOTUSE.prj/source/CACREINB.COV  $
000100*
000110*   Rev 1.0.1.15   10 Oct 2018 11:45:30   alex
000120*FDM4167
000130*fis copyright
000140*
000150*   Rev 1.0.1.14   18 Aug 2010 00:43:40   ramanp
000160*CLM0166
000170*Ledger account reinitialization error
000180*
000190*   Rev 1.0.1.13   23 Sep 2005 11:41:22   robin
000200*FDM3514
000210*Module Impact Analysis Tool - WS-REVISION awk script fix.
000220*
000230*   Rev 1.0.1.12   19 Sep 2005 16:51:30   robin
000240*FDM3514
000250*Module Impact Analysis Tool
000260*
000270*   Rev 1.0.1.11   15 Aug 2003 12:22:00   steved
000280*FTM0670
000290*Immediate Credit Commission Inputs
000300*
000310*   Rev 1.0.1.10   20 Dec 2002 10:56:22   rieko
000320*FDM3175
000330*COBOL modifications to support the Oracle 8 pre-complier.
000340*
000350*   Rev 1.0.1.9   05 Feb 2002 09:04:24   alw
000360*AFT2379
000370*Replaced FDP-CYC-DT with FDP-EFF-DT.
000380*
000390*   Rev 1.0.1.8   08 Nov 2001 16:24:32   josephk
000400*AFT2371
000410*Initialize BRDT and SFDT keys for TDTL insert in B500
000420*
000430*   Rev 1.0.1.7   Mar 27 2000 22:57:46   richardf
000440*FDM1959
000450*Expanded Keys project
*******
*******   Rev 1.0.1.6   08 Aug 1997 11:41:58   dan
*******ima0989
*******
*******   Rev 1.0.1.5   07 Aug 1997 14:08:44   dan
*******ima0989
*******
*******   Rev 1.0.1.4   07 Aug 1997 09:38:12   dan
*******ima0989
*******
*******   Rev 1.0.1.3   01 Aug 1997 16:47:14   dan
*******ima0989
*******
*******   Rev 1.0.1.2   10 Jul 1997 12:20:14   paulm
*******Mass Check In for Currency Field Changes
*******
*******   Rev 1.0.1.1   20 May 1997 14:38:54   dan
*******AFM0105
000640*
000650*   Rev 1.0.1.0   May 03 21:10:34 1997   paulm
000660*No ERF
000670*
000680*Initial Check In for FDP Branch
000690*3 May 1997
000700*
000710*   Rev 1.0   03 May 1997 14:28:50   paulm
000720*No ERF
000730*
000740*Initial Check-In   3 May 1997
000750* ACCOUNT REINITIALIZATION BY THE LEVEL OF BALANCING
000760****************************************************************
000770* THIS PROGRAM WILL REINITIALIZE LEDGER ACCOUNT BALANCES.
000780*
000790* THE FOLLOWING TABLES ARE UTILIZED AS INPUT:
000800* 1.) REINIT-ACCT_RULES
000810* 2.) LEDGER_ACCOUNTS
000820* 2.) JOURNAL_LOGS
000830*
000840****************************************************************
000850*    THE FOLLOWING ERROR CODES MAY BE RETURNED IN RTN-ERROR-CODE
000860*    FROM THIS PROGRAM...
000870*
000880*
000890****************************************************************
000900*                     CHANGES LOG
000910****************************************************************
000920*
000930*   DATE     PRG   PROJ#      DESCRIPTION
000940*  --------  --- ---------  ----------------------------------------
000950*  08-NOV-01 JJK AFT2371    MOVE ZEROES TO BRDT-KEY & SFDT-KEY
000960*                           WHEN INSERTING TDTL IN B500
000970*  31-JAN-02 ACW AFT2379    REPLACED FDP-CYC-DT WITH FDP-EFF-DT.
000980* 08/08/03 STEVED FTM0670   INITIALIZE TDTL1- DATA SO THAT NEW    FTM0670
000990*                           COLUMN NAMES DON'T CAUSE PROBLEMS     FTM0670
001000*  12-AUG-10 PRA CLM0166    CHANGE BLOCK SELECT CB2ACCTD TO
001010*                           FETCH DAL CF2ACCTD.
001020*
001030****************************************************************
001040 ENVIRONMENT DIVISION.
001050 CONFIGURATION SECTION.
001060*
001070 DATA DIVISION.
001080 WORKING-STORAGE SECTION.
001090
001100 01  WS-COMPILED                          PIC X(20).              AFT2371
001110
001120 01  WS-PGM-NAME                          PIC X(8)
001130                                          VALUE 'CACREINB'.
001140
001150 01  WS-SUBSCRIPTS.
001160     05  SUB1                             PIC S9(4) COMP.
001170     05  SUB2                             PIC S9(4) COMP.
001180     05  SUB3                             PIC S9(4) COMP.
001190
001200 01  WS-CODES.
001210     05  WS-REINIT-LEVEL                  PIC X(02) VALUE SPACES.
001220         88 NOT-APPLICABLE                VALUE '00'.
001230         88 LEDGER-LEVEL                  VALUE '01'.
001240         88 COMPANY-LEVEL                 VALUE '02'.
001250         88 PRODUCT-LEVEL                 VALUE '03'.
001260         88 CASE-LEVEL                    VALUE '04'.
004800     05  WS-REINIT-TYPE                   PIC 9(01) VALUE 0.
001280         88 PROCESS-ONE-ACCOUNT           VALUE 1.
001290         88 PROCESS-ALL-ACCOUNTS          VALUE 2.
001300     05  WS-BALANCE                       PIC 9(01) VALUE ZEROES.
001310         88 POSITIVE-BALANCE              VALUE 1.
001320         88 NEGATIVE-BALANCE              VALUE 2.
001330     05  WS-TRANCH-CODE                   PIC X(04) VALUE SPACES.
001340     05  WS-TRANCH-FOUND                  PIC 9(01) VALUE ZEROES.
001350         88 TRANCH-NOT-FOUND              VALUE 0.
001360         88 TRANCH-FOUND                  VALUE 1.
001370
001380 01  WS-ACCUMULATORS.
001390     05  WS-DB-CR-TOTAL                   PIC S9(13)V99 COMP-3.
001400
001410 01  WS-MISC-VARIABLES.
001420     05  WS-BEG-REINIT-DT                 PIC X(10).
001430     05  WS-REINIT-TR-CD                  PIC X(04).
001440
001450 01  WS-ERROR-MESSAGES.
001460     05  WS-ERR-MSG1.
001470         10  FILLER                PIC X(20)
001480             VALUE 'TRANSACTION CODE : '.
001490         10  WS-ERR-TR-CD          PIC X(4).
001500     05  WS-ERR-MSG2.
001510         10  FILLER                PIC X(19)
001520             VALUE 'TRANCHE ACTIVITY : '.
001530     05  WS-ERR-MSG3.
001540         10  FILLER                PIC X(37)
001550             VALUE 'DECREASE TR CD TRANCH NOT FOUND FOR '.
001560     05  WS-ERR-MSG4.
001570         10  FILLER                PIC X(40)
001580             VALUE 'INCREASE TR CD TRANCH NOT FOUND FOR '.
001590
001600*    FREQUENCY CODE        *BLOCK FETCH
001610     COPY CL1FREQD.
001620*    JOURNAL LOG           *BLOCK FETCH
001630     COPY CL4JLOGD.
001640*    REINIT ACCOUNT RULES  *SINGLE INSERT
001650     COPY CL1REARD.
001660*    LEDGER ACCOUNTS       *BLOCK SELECT
001670     COPY CL3ACCTD.
008900*    LEDGER ACCOUNTS       *SINGLE SELECT
001690     COPY CL1ACCTD.
001700*    TRANSACTION DETAILS   *SINGLE INSERT
001710     COPY CL1TDTLD.
001720*    TR_CODE RULES/TRANCH  *BLOCK SELECT
001730     COPY CL2TRCRD.
001740*    SCHED_ACCT_BAL        *SINGLE INSERT
001750     COPY CL1SCABD.
001760
001770**  REVISION AREA **                                              FDM3514
001780 01  WS-REVISION           PIC X(35)  VALUE                       FDM3514
001790     ' $Revision::   1.0.1.15       $'.
001800 LINKAGE SECTION.
001810*    RMESSAGE AREA
001820     COPY CLKFDPNC.
001830*    CASE DATA COPYBOOK
001840     COPY CL1CASDD.
001850*    STANDARD ERROR BLOCK
001860     COPY CLKERRBC.
001870
001880*********************************************************
001890**   P R O C E D U R E    D I V I S I O N              **
001900*********************************************************
001910
001920 PROCEDURE DIVISION USING RMESSAGE,
001930                          CASD1-DATA,
011200                          RTN-OUTPUT-FIELDS.
001950
001960     IF FDP-DEBUG-RUNSTAT > '00'                                  FDM3514
001970        ADD +1  TO RTN-DIMT-CNT                                   FDM3514
001980        MOVE WHEN-COMPILED TO                                     FDM3514
001990             RTN-DIMT-COMPILE-DATE (RTN-DIMT-CNT)                 FDM3514
002000        MOVE WS-REVISION (16:10) TO                               FDM3514
002010             RTN-DIMT-REVISION (RTN-DIMT-CNT)                     FDM3514
002020        MOVE 'CACREINB' TO                                        FDM3514
002030           RTN-DIMT-PROGRAM-NAME (RTN-DIMT-CNT)                   FDM3514
002040        CALL 'CUTDIMTD' USING RMESSAGE,                           FDM3514
002050                              RTN-OUTPUT-FIELDS                   FDM3514
002060     END-IF.                                                      FDM3514
002070
002080
002090******************************************************************
002100**                MAIN ROUTINE                                  **
002110******************************************************************
002120     PERFORM A000-INITIALIZE
002130        THRU A000-EXIT.
002140
002150     IF RTN-NO-ERROR
002160        PERFORM B000-MAIN
002170           THRU B000-EXIT
002180     END-IF
002190
002200     GOBACK.
002210
002220 A000-INITIALIZE.
002230*********************************************************
002240** VALIDATE INCOMING PARAMETERS                        **
002250*********************************************************
002260     SET RTN-NO-ERROR TO TRUE.
002270** EDIT INCOMING PARAMETERS
002280     IF FDP-USER = SPACES
002290        MOVE 'UT'            TO RTN-ERR-PREFIX
002300        MOVE 39              TO RTN-ERROR-CODE
002310        MOVE 'CACREINB'      TO RTN-PROG-NAME
002320        MOVE 'A000-'         TO RTN-PARA-NAME
002330        CALL 'CUTSVARB' USING RMESSAGE,
002340                              RTN-OUTPUT-FIELDS
002350     END-IF.
002360
002370     IF FDP-REF-KEY <= ZERO
002380        MOVE 'UT'            TO RTN-ERR-PREFIX
002390        MOVE 32              TO RTN-ERROR-CODE
002400        MOVE 'CACREINB'      TO RTN-PROG-NAME
002410        MOVE 'A000-'         TO RTN-PARA-NAME
002420        CALL 'CUTSVARB' USING RMESSAGE,
002430                              RTN-OUTPUT-FIELDS
002440     END-IF.
002450
002460     IF FDP-TR-REF-NO = SPACES
002470        MOVE 'UT'            TO RTN-ERR-PREFIX
002480        MOVE 34              TO RTN-ERROR-CODE
002490        MOVE 'CACREINB'      TO RTN-PROG-NAME
002500        MOVE 'A000-'         TO RTN-PARA-NAME
002510        CALL 'CUTSVARB' USING RMESSAGE,
002520                              RTN-OUTPUT-FIELDS
002530     END-IF.
002540
002550     IF FDP-CYC-DT    = SPACES
002560        MOVE 'UT'            TO RTN-ERR-PREFIX
002570        MOVE 36              TO RTN-ERROR-CODE
002580        MOVE 'CACREINB'      TO RTN-PROG-NAME
002590        MOVE 'A000-'         TO RTN-PARA-NAME
002600        CALL 'CUTSVARB' USING RMESSAGE,
002610                              RTN-OUTPUT-FIELDS
002620     END-IF.
002630
002640 A000-EXIT.
002650     EXIT.
002660
002670 B000-MAIN.
002680*********************************************************
002690* MAIN LOOP DRIVEN BY REINIT_ACCT_RULES
002700*********************************************************
002710     INITIALIZE REAR1-DATA.
002720     MOVE FDP-REF-KEY TO REAR1-REAR-KEY.
002730
002740     CALL 'CS1REARD'    USING RMESSAGE,
002750                              REAR1-DATA,
002760                              RTN-OUTPUT-FIELDS.
002770
002780*    CALCULATE THE BEGINNING REINIT DATE USING FREQ-KEY
002790     IF RTN-NO-ERROR
002800        PERFORM B100-GET-REINIT-DATES THRU B100-EXIT
002810     END-IF.
002820
002830*    DETERMINE THE LEVEL OF REINITIALIZATION
002840*    LEDGER LEVEL
002850     IF REAR1-MKEY-CO-NUM     =  ZEROES AND
002860        REAR1-MKEY-PROD-NUM   =  ZEROES AND
002870        REAR1-CASE-KEY        =  ZEROES
002880        MOVE '01' TO WS-REINIT-LEVEL
002890     END-IF.
002900
002910*    COMPANY LEVEL
002920     IF REAR1-MKEY-CO-NUM     <> ZEROES AND
002930        REAR1-MKEY-PROD-NUM   =  ZEROES AND
002940        REAR1-CASE-KEY        =  ZEROES
002950        MOVE '02' TO WS-REINIT-LEVEL
002960     END-IF.
002970
002980*    PRODUCT LEVEL
002990     IF REAR1-MKEY-CO-NUM     =  ZEROES AND
003000        REAR1-MKEY-PROD-NUM   <> ZEROES AND
003010        REAR1-CASE-KEY        =  ZEROES
003020        MOVE '03' TO WS-REINIT-LEVEL
003030     END-IF.
003040
003050*    CASE LEVEL
003060     IF REAR1-MKEY-CO-NUM     =  ZEROES AND
003070        REAR1-MKEY-PROD-NUM   =  ZEROES AND
003080        REAR1-CASE-KEY        <> ZEROES
003090        MOVE '04' TO WS-REINIT-LEVEL
003100     END-IF.
003110
003120*    DETERMINE THE TYPE OF REINITIALIZATION
019000     IF REAR1-ACCT-KEY  >  0
003140        MOVE 1 TO WS-REINIT-TYPE
019300     ELSE
003160        MOVE 2 TO WS-REINIT-TYPE
003170     END-IF.
003180
021600**   PROCESS REINIT RULE ON SEVERAL ACCOUNTS
003200     IF RTN-NO-ERROR  AND  PROCESS-ALL-ACCOUNTS
003210        PERFORM B200-GET-LEDGER-ACCOUNTS THRU B200-EXIT
003220     END-IF.
003230
021600**   PROCESS REINIT RULE ON ONE ACCOUNT
003250     IF RTN-NO-ERROR  AND  PROCESS-ONE-ACCOUNT
003260        PERFORM B225-GET-GL-ACCOUNT THRU B225-EXIT
022100*       PROCESS JLOGS FOR THE LEDGER ACCOUNT UNDER THIS RULE
022200        IF RTN-NO-ERROR
022300           PERFORM B325-PROCESS-GL-ACCOUNT THRU B325-EXIT
022400        END-IF
003310     END-IF.
003320
003330*    ADVANCE THE NEXT REINITIALIZATION DATE
003340     IF RTN-NO-ERROR
003350        PERFORM B125-ADVANCE-REINIT-DATE THRU B125-EXIT
003360     END-IF.
003370
003380*    INSERT SCHED_ACCT_BAL RECORD FOR THIS RULE
003390     IF RTN-NO-ERROR
003400        PERFORM B150-INSERT-SCHED-RECORD THRU B150-EXIT
003410     END-IF.
003420
003430 B000-EXIT.
003440     EXIT.
003450
003460 B100-GET-REINIT-DATES.
003470*********************************************************
003480**   COMPUTE THE BEGINNING REINIT DATE
003490*********************************************************
003500     INITIALIZE FREQ1-DATA.
003510     MOVE REAR1-FREQ-KEY       TO FREQ1-FREQ-KEY.
003520     MOVE 'D'                  TO FREQ1-DIR-CD.
003530     MOVE REAR1-NXT-REINIT-DT  TO FREQ1-IN-DATE.
003540
003550     CALL 'CUTFREQB' USING RMESSAGE,
003560                           FREQ1-DATA,
003570                           RTN-OUTPUT-FIELDS.
003580
003590     MOVE FREQ1-OUT-DATE             TO WS-BEG-REINIT-DT.
003600
003610 B100-EXIT.
003620     EXIT.
003630
003640
003650 B125-ADVANCE-REINIT-DATE.
003660*********************************************************
003670**   ADVANCE THE NXT-REINIT-DT BY FREQUENCY
003680**   UPDATE THE REINIT ACCT RULE WITH NEW DATE
003690*********************************************************
003700     INITIALIZE FREQ1-DATA.
003710     MOVE REAR1-FREQ-KEY       TO FREQ1-FREQ-KEY.
003720     MOVE 'I'                  TO FREQ1-DIR-CD.
003730     MOVE REAR1-NXT-REINIT-DT  TO FREQ1-IN-DATE.
003740
003750     CALL 'CUTFREQB' USING RMESSAGE,
003760                           FREQ1-DATA,
003770                           RTN-OUTPUT-FIELDS.
003780
003790*    CALL REINT_ACCT_RULE UPDATE DAL
003800     IF RTN-NO-ERROR
003810        MOVE FREQ1-OUT-DATE       TO REAR1-NXT-REINIT-DT
003820        CALL 'CU1REARD' USING RMESSAGE,
003830                              REAR1-DATA,
003840                              RTN-OUTPUT-FIELDS
003850     END-IF.
003860
003870 B125-EXIT.
003880     EXIT.
003890
003900 B150-INSERT-SCHED-RECORD.
003910*********************************************************
003920**   INSERT A RECORD IN THE SCHED_ACCT_BAL TABLE FOR EACH
003930**   REINIT ACCOUNT RULE PROCESSED
003940*********************************************************
003950     INITIALIZE SCAB1-DATA.
003960     MOVE '01'                 TO SCAB1-BAL-TYP-CD.
003970     MOVE FDP-EFF-DT           TO SCAB1-EFF-DT.                   AFT2379
003980     MOVE REAR1-REAR-KEY       TO SCAB1-REAR-KEY.
003990     MOVE '01'                 TO SCAB1-STAT-CD.
004000     MOVE FDP-TR-REF-NO        TO SCAB1-TR-REF-NO.
004010
004020     CALL 'CI1SCABD' USING RMESSAGE,
004030                           SCAB1-DATA,
004040                           RTN-OUTPUT-FIELDS.
004050
004060 B150-EXIT.
004070     EXIT.
004080
004090 B200-GET-LEDGER-ACCOUNTS.
004100*********************************************************
004110** GET ALL LEDGER ACCOUNTS AT THIS LEVEL OF BALANCING
004120*********************************************************
004130     INITIALIZE ACCT3-DATA.
004140     MOVE WS-REINIT-LEVEL      TO ACCT3-BAL-LVL-CD (1).
004150
004160     PERFORM UNTIL ACCT3-END-FLAG = 'Y' OR RTN-ERROR              CLM0166
004170        CALL 'CF2ACCTD'    USING RMESSAGE,                        CLM0166
004180                              ACCT3-DATA,
004190                              RTN-OUTPUT-FIELDS
004200        PERFORM VARYING SUB1 FROM 1 BY 1                          CLM0166
004210           UNTIL SUB1 > ACCT3-ROWS-FOUND OR RTN-ERROR             CLM0166
004220
004230           PERFORM B300-PROCESS-LEDGER-ACCOUNTS                   CLM0166
004240              THRU B300-EXIT                                      CLM0166
004250
004260        END-PERFORM                                               CLM0166
004270     END-PERFORM.                                                 CLM0166
004280
004290 B200-EXIT.
004300     EXIT.
004310
004320
004330 B225-GET-GL-ACCOUNT.
004340*********************************************************
004350** GET THE LEDGER ACCOUNT AT THIS LEVEL OF BALANCING
004360*********************************************************
004370     INITIALIZE ACCT1-DATA.
030700     MOVE REAR1-ACCT-KEY       TO ACCT1-ACCT-KEY.
030700     MOVE WS-REINIT-LEVEL      TO ACCT1-BAL-LVL-CD.
004400
004410     CALL 'CS3ACCTD'    USING RMESSAGE,
004420                              ACCT1-DATA,
004430                              RTN-OUTPUT-FIELDS.
004440 B225-EXIT.
004450     EXIT.
004460
004470 B300-PROCESS-LEDGER-ACCOUNTS.
004480*********************************************************
004490** SUMMARIZE THE JOURNAL LOGS FOR EACH LEDGER ACCOUNT
004500** SELECTED.  THE JOURNAL LOGS SUMMARY WILL BE GROUPED
004510** BY CASE-KEY FOR ALL LEVELS OF BALANCING.  THE DAL RETURNS
004520** THE TOT-CR & TOT-DB BY CASE KEY IN EACH RECORD.
004530*********************************************************
004540
004550*       BLOCK FETCH JOURNAL LOGS FOR ACCOUNT
004560        INITIALIZE WS-ACCUMULATORS
004570        INITIALIZE JLOG4-DATA
004580        PERFORM UNTIL JLOG4-END-FLAG = 'Y'  OR  RTN-ERROR
004590
004600           MOVE  ACCT3-ACCT-KEY (SUB1)  TO JLOG4-ACCT-KEY (1)
004610           MOVE  WS-REINIT-LEVEL        TO JLOG4-BAL-LVL
004620           MOVE  REAR1-MKEY-CO-NUM
004630                            TO JLOG4-MKEY-CO-NUM (1)
004640           MOVE  REAR1-MKEY-PROD-NUM
004650                            TO JLOG4-MKEY-PROD-NUM (1)
004660           MOVE  REAR1-CASE-KEY
004670                            TO JLOG4-CASE-KEY (1)
004680           MOVE  REAR1-NXT-REINIT-DT
004690                            TO JLOG4-END-DT
004700           MOVE  WS-BEG-REINIT-DT TO JLOG4-BEGIN-DT
004710           CALL 'CF3JLOGD'    USING RMESSAGE,
004720                                    JLOG4-DATA,
004730                                    RTN-OUTPUT-FIELDS
004740
004750*  **      PROCESS EACH JLOG TOTAL LINE RETURNED FROM DAL
004760           PERFORM VARYING SUB2 FROM 1 BY 1
004770                   UNTIL SUB2 > JLOG4-ROWS-FOUND  OR  RTN-ERROR
004780              MOVE ZEROES TO WS-BALANCE
004790              COMPUTE WS-DB-CR-TOTAL =
004800                JLOG4-TOT-CREDITS (SUB2)  -
004810                JLOG4-TOT-DEBITS  (SUB2)
004820              END-COMPUTE
004830*
004840              IF WS-DB-CR-TOTAL > 0
004850                 MOVE 1 TO WS-BALANCE
004860              END-IF
004870              IF WS-DB-CR-TOTAL < 0
004880                 MOVE 2 TO WS-BALANCE
004890              END-IF
004900
004910*             IF ZERO BALANCE SKIP OVER THIS PROCESSING
004920              IF POSITIVE-BALANCE OR NEGATIVE-BALANCE
036300                 MOVE ACCT3-REINIT-TR-CD (SUB1) TO
036300                      WS-REINIT-TR-CD
004950                 PERFORM B400-GET-TRANCH-CODE
004960                    THRU B400-EXIT
004970                 IF TRANCH-FOUND AND RTN-NO-ERROR
004980                    PERFORM B500-CREATE-NOTIONAL-TDTL
004990                       THRU B500-EXIT
005000                 END-IF
005010              END-IF
005020
005030*          END OF JLOG4-ROWS-FOUND LOOP
005040           END-PERFORM
005050*       END OF JLOG4-END-FLAG LOOP
005060        END-PERFORM.                                              CLM0166
005070
005080 B300-EXIT.
005090     EXIT.
005100*
005110*
005120*
005130
005140 B325-PROCESS-GL-ACCOUNT.
005150*********************************************************
005160** SUMMARIZE THE JOURNAL LOGS FOR THE LEDGER ACCOUNT
005170** SELECTED.  THE JOURNAL LOGS SUMMARY WILL BE GROUPED
005180** BY CASE-KEY FOR ALL LEVELS OF BALANCING.  THE DAL RETURNS
005190** THE TOT-CR & TOT-DB BY CASE KEY IN EACH RECORD.
005200*********************************************************
005210*       BLOCK FETCH JOURNAL LOGS FOR ACCOUNT
005220     INITIALIZE WS-ACCUMULATORS.
005230     INITIALIZE JLOG4-DATA.
005240     PERFORM UNTIL JLOG4-END-FLAG = 'Y'  OR  RTN-ERROR
005250
005260        MOVE  ACCT1-ACCT-KEY         TO JLOG4-ACCT-KEY (1)
005270        MOVE  WS-REINIT-LEVEL        TO JLOG4-BAL-LVL
005280        MOVE  REAR1-MKEY-CO-NUM
005290                        TO JLOG4-MKEY-CO-NUM (1)
005300        MOVE  REAR1-MKEY-PROD-NUM
005310                        TO JLOG4-MKEY-PROD-NUM (1)
005320        MOVE  REAR1-CASE-KEY
005330                        TO JLOG4-CASE-KEY (1)
005340        MOVE  REAR1-NXT-REINIT-DT
005350                        TO JLOG4-END-DT
005360        MOVE  WS-BEG-REINIT-DT TO JLOG4-BEGIN-DT
005370        CALL 'CF3JLOGD'    USING RMESSAGE,
005380                                 JLOG4-DATA,
005390                                 RTN-OUTPUT-FIELDS
005400
005410*       PROCESS EACH JLOG TOTAL LINE RETURNED FROM DAL
005420        PERFORM VARYING SUB2 FROM 1 BY 1
005430                UNTIL SUB2 > JLOG4-ROWS-FOUND  OR  RTN-ERROR
005440           MOVE ZEROES TO WS-BALANCE
005450           COMPUTE WS-DB-CR-TOTAL =
035100                   JLOG4-TOT-CREDITS (SUB2)  -
035200                   JLOG4-TOT-DEBITS  (SUB2)
005480           END-COMPUTE
005490*
005500           IF WS-DB-CR-TOTAL > 0
005510              MOVE 1 TO WS-BALANCE
005520           END-IF
005530           IF WS-DB-CR-TOTAL < 0
005540              MOVE 2 TO WS-BALANCE
005550           END-IF
005560
005570*          IF ZERO BALANCE SKIP OVER THIS PROCESSING
005580           IF POSITIVE-BALANCE OR NEGATIVE-BALANCE
036300              MOVE ACCT1-REINIT-TR-CD  TO
036300                   WS-REINIT-TR-CD
005610              PERFORM B400-GET-TRANCH-CODE      THRU B400-EXIT
005620              IF TRANCH-FOUND AND RTN-NO-ERROR
005630                 PERFORM B500-CREATE-NOTIONAL-TDTL
005640                    THRU B500-EXIT
005650              END-IF
005660           END-IF
005670
005680*       END OF JLOG4-ROWS-FOUND LOOP
005690        END-PERFORM
005700*    END OF JLOG4-END-FLAG LOOP
005710     END-PERFORM.
005720
005730 B325-EXIT.
005740     EXIT.
005750*
005760*
005770 B400-GET-TRANCH-CODE.
005780*********************************************************
005790** GET THE TRANCH CODE USING TR CODE AND ACTIVITY NUM
005800*********************************************************
005810**
005820**   READ TRANSACTION RULES
005830**   (STORE DATA IN TRCR2-DATA)
005840**
005850     INITIALIZE TRCR2-DATA.
005860     MOVE WS-REINIT-TR-CD TO TRCR2-TR-CD (1).
005870     CALL 'CB1TRCRD' USING RMESSAGE,
005880                           TRCR2-DATA,
005890                           RTN-OUTPUT-FIELDS.
005900**   ERROR OUT, IF NONE FOUND
005910     IF RTN-NO-ERROR AND TRCR2-ROWS-FOUND = 0
005920        MOVE 'TX'                       TO RTN-ERR-PREFIX
005930        MOVE 1004                       TO RTN-ERROR-CODE
005940        MOVE 'CACREINB'                 TO RTN-PROG-NAME
005950        MOVE 'B400'                     TO RTN-PARA-NAME
005960        MOVE WS-REINIT-TR-CD            TO WS-ERR-TR-CD
005970        MOVE 1                          TO RTN-VAR-SEQ-NO (1)
005980        MOVE WS-ERR-MSG1                TO RTN-VAR-TEXT (1)
005990        MOVE 1                          TO RTN-VAR-DETL-CNT
006000        CALL 'CUTSVARB' USING RMESSAGE,
006010                              RTN-OUTPUT-FIELDS
006020        GO TO B400-EXIT
006030     END-IF.
006040**
006050**   GET TRANS CODE
006060     MOVE SPACES TO WS-TRANCH-CODE.
006070     MOVE ZEROES TO WS-TRANCH-FOUND.
006080**
006090**   SEARCH TRANSACTION CODES FOR
006100**        'TRANSFER TO SUSPENSE', ACTIVITY NUMBER = 10 OR
006110**        'TRANSFER TO GENERAL SUSPENSE', ACTIVITY NUMBER = 15
006120**
006130     PERFORM VARYING SUB3 FROM 1 BY 1
006140             UNTIL SUB3 > TRCR2-ROWS-FOUND
006150                OR RTN-ERROR
006160                OR TRANCH-FOUND
006170
006180*       LOOK FOR DECREASE TRANCH
006190        IF POSITIVE-BALANCE
006200           IF TRCR2-ACTIVITY-NUM (SUB3) = 96
006210               MOVE 1 TO WS-TRANCH-FOUND
006220               MOVE TRCR2-TDTL-TR-CD (SUB3) TO WS-TRANCH-CODE
006230           END-IF
006240        END-IF
006250
006260*       LOOK FOR INCREASE TRANCH
006270        IF NEGATIVE-BALANCE
006280           IF TRCR2-ACTIVITY-NUM (SUB3) = 95
006290               MOVE 1 TO WS-TRANCH-FOUND
006300               MOVE TRCR2-TDTL-TR-CD (SUB3) TO WS-TRANCH-CODE
006310           END-IF
006320        END-IF
006330
006340     END-PERFORM.
006350**
006360**   ERROR OUT IF NO TRANCHE ACTIVITY FOUND FOR TR-CD
006370**
006380     IF TRANCH-NOT-FOUND
006390        MOVE 'TX'       TO RTN-ERR-PREFIX
006400        MOVE  1003      TO RTN-ERROR-CODE
006410        MOVE 'B400'     TO RTN-PARA-NAME                          CLM0166
006420        MOVE 'CACREINB' TO RTN-PROG-NAME
006430        MOVE 1                      TO RTN-VAR-SEQ-NO (1)
006440        MOVE WS-ERR-MSG2            TO RTN-VAR-TEXT (1)
006450        IF POSITIVE-BALANCE
006460           MOVE 2                   TO RTN-VAR-SEQ-NO (2)
006470           MOVE WS-ERR-MSG3         TO RTN-VAR-TEXT (2)
006480        END-IF
006490        IF NEGATIVE-BALANCE
006500           MOVE 2                   TO RTN-VAR-SEQ-NO (2)
006510           MOVE WS-ERR-MSG4         TO RTN-VAR-TEXT (2)
006520        END-IF
006530        MOVE 3                      TO RTN-VAR-SEQ-NO (3)
006540        MOVE WS-REINIT-TR-CD        TO WS-ERR-TR-CD
006550        MOVE WS-ERR-MSG1            TO RTN-VAR-TEXT (3)
006560        MOVE 3                      TO RTN-VAR-DETL-CNT
006570        CALL 'CUTSVARB' USING RMESSAGE
006580                              RTN-OUTPUT-FIELDS
006590     END-IF.
006600
006610
006620 B400-EXIT.
006630     EXIT.
006640
006650*
006660*
006670 B500-CREATE-NOTIONAL-TDTL.
006680*********************************************************
006690** CREATE A NOTIONAL DETAIL FOR EACH JLOG RECORD
006700*********************************************************
006710
006720**   MOVE DATA TO TRANSACT_DETAILS
006730     INITIALIZE TDTL1-DATA                                        FTM0670
006740     MOVE WS-DB-CR-TOTAL         TO TDTL1-AMT.
006750     MOVE WS-DB-CR-TOTAL         TO TDTL1-PRNC-AMT.
006760     MOVE WS-TRANCH-CODE         TO TDTL1-TR-CD.
006770     MOVE FDP-EFF-DT             TO TDTL1-DUE-DT.
006780     MOVE FDP-EFF-DT             TO TDTL1-EFF-DT.
006790     MOVE '0'                    TO TDTL1-INT-INCL-CD.
006800**   2 = NOTIONAL
006810     MOVE '2'                    TO TDTL1-STAT-CD.
006820     MOVE FDP-TR-REF-NO          TO TDTL1-TR-REF-NO.
006830     MOVE JLOG4-CASE-KEY (SUB2)  TO TDTL1-CASE-KEY.
006840     MOVE FDP-SCAT-KEY           TO TDTL1-SCAT-KEY.
006850     MOVE FDP-EFF-DT             TO TDTL1-TX-DT.
006860     MOVE FDP-CYC-DT             TO TDTL1-BOOK-DT,
006870                                    TDTL1-PROC-DT.
006880     MOVE 0                      TO TDTL1-REF-KEY.
006890     MOVE 0                      TO TDTL1-DEF-BY-NUM.
006900
006910**   INSERT INTO TRANSACT_DETAILS
006920     CALL 'CI2TDTLD' USING RMESSAGE,
006930                           TDTL1-DATA,
006940                           RTN-OUTPUT-FIELDS.
006950
006960 B500-EXIT.
006970     EXIT.
006980
006990
007000**
007010**   E N D     O F    P R O G R A M
007020**
007030
007040
